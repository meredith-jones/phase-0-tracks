1. Display the information in one table:

sqlite> SELECT * FROM hikes;

1|Mount Ellinor|3|3300|1
2|Mailbox Peak|5|4000|1
3|Colchuck Lake|8|2280|1
4|Punchbowl Falls|3|580|2
5|Maggies Peak|4|1700|3
6|Cataract Falls|9|2200|3
7|Mount Diablo|12|3500|3
8|Half Dome|16|5100|3
9|Flatiron|6|2800|4

2. Update an item that meets some condition: 

sqlite> UPDATE hikes SET miles=6 WHERE name="Maggies Peak";

sqlite> SELECT * FROM hikes;
1|Mount Ellinor|3|3300|1
2|Mailbox Peak|5|4000|1
3|Colchuck Lake|8|2280|1
4|Punchbowl Falls|3|580|2
5|Maggies Peak|6|1700|3
6|Cataract Falls|9|2200|3
7|Mount Diablo|12|3500|3
8|Half Dome|16|5100|3
9|Flatiron|6|2800|4

3. Display the information in both tables using one query:

sqlite> SELECT * FROM hikes, states WHERE hikes.state_id = states.id;

1|Mount Ellinor|3|3300|1|1|Washington
2|Mailbox Peak|5|4000|1|1|Washington
3|Colchuck Lake|8|2280|1|1|Washington
4|Punchbowl Falls|3|580|2|2|Oregon
5|Maggies Peak|6|1700|3|3|California
6|Cataract Falls|9|2200|3|3|California
7|Mount Diablo|12|3500|3|3|California
8|Half Dome|16|5100|3|3|California
9|Flatiron|6|2800|4|4|Arizona

4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query:

sqlite> SELECT hikes.name, hikes.miles, states.name FROM hikes JOIN states ON hikes.state_id = states.id;

Mount Ellinor|3|Washington
Mailbox Peak|5|Washington
Colchuck Lake|8|Washington
Punchbowl Falls|3|Oregon
Maggies Peak|6|California
Cataract Falls|9|California
Mount Diablo|12|California
Half Dome|16|California
Flatiron|6|Arizona

5. Delete an item that meets some condition: 

sqlite> DELETE FROM hikes WHERE elevation < 1000;

sqlite> SELECT * FROM hikes;
1|Mount Ellinor|3|3300|1
2|Mailbox Peak|5|4000|1
3|Colchuck Lake|8|2280|1
5|Maggies Peak|6|1700|3
6|Cataract Falls|9|2200|3
7|Mount Diablo|12|3500|3
8|Half Dome|16|5100|3
9|Flatiron|6|2800|4
 

